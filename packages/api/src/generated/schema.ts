/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  readonly '/auth/register': {
    readonly post: operations['AuthController_register'];
  };
  readonly '/auth/login': {
    readonly post: operations['AuthController_login'];
  };
  readonly '/auth/me': {
    readonly get: operations['AuthController_me'];
  };
  readonly '/auth/logout': {
    readonly post: operations['AuthController_logout'];
  };
}

export interface components {
  readonly schemas: {
    readonly RegisterBody: {
      readonly email: string;
      readonly password: string;
    };
    /** @enum {string} */
    readonly AccountStatus: 'inactive' | 'active';
    readonly RegisterResponse: {
      readonly id: string;
      readonly email: string;
      readonly status: components['schemas']['AccountStatus'];
      /** Format: date-time */
      readonly createdAt: string;
      /** Format: date-time */
      readonly updatedAt: string;
    };
    readonly HttpErrorBody: {
      readonly statusCode: number;
      readonly message: string;
      readonly error: string;
    };
    readonly LoginBody: {
      readonly email: string;
      readonly password: string;
    };
    readonly MeResponse: {
      readonly id: string;
      readonly email: string;
      readonly status: components['schemas']['AccountStatus'];
      /** Format: date-time */
      readonly createdAt: string;
      /** Format: date-time */
      readonly updatedAt: string;
    };
  };
}

export interface operations {
  readonly AuthController_register: {
    readonly parameters: {};
    readonly responses: {
      readonly 201: {
        readonly content: {
          readonly 'application/json': components['schemas']['RegisterResponse'];
        };
      };
      readonly 400: {
        readonly content: {
          readonly 'application/json': components['schemas']['HttpErrorBody'];
        };
      };
      readonly 409: {
        readonly content: {
          readonly 'application/json': components['schemas']['HttpErrorBody'];
        };
      };
      readonly 500: {
        readonly content: {
          readonly 'application/json': components['schemas']['HttpErrorBody'];
        };
      };
    };
    readonly requestBody: {
      readonly content: {
        readonly 'application/json': components['schemas']['RegisterBody'];
      };
    };
  };
  readonly AuthController_login: {
    readonly parameters: {};
    readonly responses: {
      readonly 204: never;
      readonly 401: {
        readonly content: {
          readonly 'application/json': components['schemas']['HttpErrorBody'];
        };
      };
    };
    readonly requestBody: {
      readonly content: {
        readonly 'application/json': components['schemas']['LoginBody'];
      };
    };
  };
  readonly AuthController_me: {
    readonly parameters: {};
    readonly responses: {
      readonly 200: {
        readonly content: {
          readonly 'application/json': components['schemas']['MeResponse'];
        };
      };
      readonly 204: never;
    };
  };
  readonly AuthController_logout: {
    readonly parameters: {};
    readonly responses: {
      readonly 204: never;
    };
  };
}

export interface external {}
